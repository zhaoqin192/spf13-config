
" scrooloose/syntastic
" let g:syntastic_ignore_files = ['\.py$']
let g:syntastic_mode_map = {"mode": "active", "passive_filetypes": ["python", "go"]}

" other
set nofoldenable
set mouse=a                 " Automatically enable mouse usage

" Pymode
let g:pymode_options_max_line_length = 120
let g:pymode_lint = 1
let g:pymode_lint_options_pyflakes = {'max_line_length': g:pymode_options_max_line_length}
let g:pymode_folding = 0

" YouCompleteMe
let g:ycm_complete_in_comments = 1 "在注释中也能补全
let g:ycm_complete_in_strings = 1 "在字符串输入中也能补全
let g:ycm_use_ultisnips_completer = 1 "提示UltiSnips
let g:ycm_collect_identifiers_from_comments_and_strings = 1 "注释和字符串中的文字也会被收入补全
" let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_seed_identifiers_with_syntax = 1 "开启语法关键字补全
" let g:ycm_autoclose_preview_window_after_completion=1
let g:UltiSnipsExpandTrigger = '<C-j>'
let g:UltiSnipsJumpForwardTrigger = '<C-j>'
let g:UltiSnipsJumpBackwardTrigger = '<C-k>'
nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>gd :YcmCompleter GoToDeclaration<CR>
" inoremap <expr> <CR>       pumvisible() ? "\<C-y>" : "\<CR>"    "回车即选中当前项"

if !empty(glob("~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"))
    let g:ycm_global_ycm_extra_conf = "~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py"
endif

" 黑名单，不启用
let g:ycm_filetype_blacklist = {
    \ 'tagbar' : 1,
    \ 'gitcommit' : 1,
    \}

" set background=light
" colorscheme solarized
colorscheme gruvbox
